{"remainingRequest":"/Users/user/Desktop/form/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/user/Desktop/form/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Desktop/form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Desktop/form/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/user/Desktop/form/src/App.vue","mtime":1598460078667},{"path":"/Users/user/Desktop/form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/form/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/user/Desktop/form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"form\" },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"form_container\" },\n        [\n          _c(\"vue-headful\", {\n            attrs: {\n              title: \"Edgeryders | \" + _vm.form.config.title,\n              description: _vm.form.config.text\n            }\n          }),\n          _c(\"div\", { staticClass: \"introduction\" }, [\n            _vm.form.config.logos\n              ? _c(\n                  \"div\",\n                  { staticClass: \"logos\" },\n                  _vm._l(_vm.form.config.logos, function(item, index) {\n                    return _c(\"div\", { staticClass: \"logo\" }, [\n                      item.image == \"edgeryders\"\n                        ? _c(\n                            \"a\",\n                            {\n                              attrs: {\n                                href: \"https://edgeryders.eu\",\n                                target: \"_blank\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"svg\",\n                                {\n                                  attrs: {\n                                    viewBox: \"0 0 500 500\",\n                                    xmlns: \"http://www.w3.org/2000/svg\"\n                                  }\n                                },\n                                [\n                                  _c(\"path\", {\n                                    attrs: {\n                                      d:\n                                        \"M0 250a250 250 0 1 1 500 0 250 250 0 0 1-500 0zm97-103v106h42v-16h-26v-31h19v-16h-19v-27h26v-16zm80 91c6 0 8-4 8-11v-52c0-8-4-12-13-12h-4v75zm-25-91h23c19 0 27 10 27 29v48c0 20-8 29-26 29h-24zm63 25c0-17 9-27 25-27s24 9 24 27v10h-16v-11c0-8-3-11-8-11-6 0-9 3-9 11v59c0 7 3 11 9 11 5 0 8-4 8-11v-17h-10v-13h26v53h-8l-3-7c-4 7-9 10-16 10-14 0-22-11-22-30zm64-25h43v16h-26v27h18v16h-18v31h26v16h-43zM112 381H95V275h24c18 0 26 8 26 30 0 13-3 21-10 26l12 50h-17l-10-45h-8zm0-60v-31h6c8 0 10 3 10 15 0 11-2 16-10 16zm53-46l10 42h1l10-42h17l-19 62v44h-16v-42l-20-64zm69 90c6 0 9-4 9-11v-51c0-9-4-13-13-13h-4v75zm-24-90h23c18 0 27 9 27 29v47c0 20-8 30-26 30h-24zm136 46v-31h6c8 0 10 3 10 15 0 11-2 16-10 16zm-72-46h43v15h-26v28h19v15h-19v32h26v16h-43zm72 106h-16V275h24c17 0 25 8 25 30 0 13-3 21-10 26l12 50h-17l-10-45h-8zm57-30c1 11 4 16 11 16 6 0 10-4 10-10 0-9-6-14-15-23-12-12-20-21-20-35 0-15 11-26 25-26s24 10 25 26l-16 2c-1-9-3-13-9-13-5 0-9 4-9 10 0 9 7 16 17 25 11 11 18 19 18 34s-11 26-26 26-26-11-27-29zm-65-172v-42h-42a42 42 0 1 1 42 42z\",\n                                      fill: \"orangered\",\n                                      \"fill-rule\": \"evenodd\"\n                                    }\n                                  })\n                                ]\n                              )\n                            ]\n                          )\n                        : _c(\n                            \"a\",\n                            { attrs: { href: item.url, target: \"_blank\" } },\n                            [_c(\"img\", { attrs: { src: item.image } })]\n                          )\n                    ])\n                  }),\n                  0\n                )\n              : _c(\"div\", { staticClass: \"logos\" }, [\n                  _c(\"div\", { staticClass: \"logo\" }, [\n                    _c(\n                      \"a\",\n                      {\n                        attrs: {\n                          href: \"https://edgeryders.eu\",\n                          target: \"_blank\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"svg\",\n                          {\n                            attrs: {\n                              viewBox: \"0 0 500 500\",\n                              xmlns: \"http://www.w3.org/2000/svg\"\n                            }\n                          },\n                          [\n                            _c(\"path\", {\n                              attrs: {\n                                d:\n                                  \"M0 250a250 250 0 1 1 500 0 250 250 0 0 1-500 0zm97-103v106h42v-16h-26v-31h19v-16h-19v-27h26v-16zm80 91c6 0 8-4 8-11v-52c0-8-4-12-13-12h-4v75zm-25-91h23c19 0 27 10 27 29v48c0 20-8 29-26 29h-24zm63 25c0-17 9-27 25-27s24 9 24 27v10h-16v-11c0-8-3-11-8-11-6 0-9 3-9 11v59c0 7 3 11 9 11 5 0 8-4 8-11v-17h-10v-13h26v53h-8l-3-7c-4 7-9 10-16 10-14 0-22-11-22-30zm64-25h43v16h-26v27h18v16h-18v31h26v16h-43zM112 381H95V275h24c18 0 26 8 26 30 0 13-3 21-10 26l12 50h-17l-10-45h-8zm0-60v-31h6c8 0 10 3 10 15 0 11-2 16-10 16zm53-46l10 42h1l10-42h17l-19 62v44h-16v-42l-20-64zm69 90c6 0 9-4 9-11v-51c0-9-4-13-13-13h-4v75zm-24-90h23c18 0 27 9 27 29v47c0 20-8 30-26 30h-24zm136 46v-31h6c8 0 10 3 10 15 0 11-2 16-10 16zm-72-46h43v15h-26v28h19v15h-19v32h26v16h-43zm72 106h-16V275h24c17 0 25 8 25 30 0 13-3 21-10 26l12 50h-17l-10-45h-8zm57-30c1 11 4 16 11 16 6 0 10-4 10-10 0-9-6-14-15-23-12-12-20-21-20-35 0-15 11-26 25-26s24 10 25 26l-16 2c-1-9-3-13-9-13-5 0-9 4-9 10 0 9 7 16 17 25 11 11 18 19 18 34s-11 26-26 26-26-11-27-29zm-65-172v-42h-42a42 42 0 1 1 42 42z\",\n                                fill: \"orangered\",\n                                \"fill-rule\": \"evenodd\"\n                              }\n                            })\n                          ]\n                        )\n                      ]\n                    )\n                  ])\n                ]),\n            _c(\"h2\", { staticClass: \"form_title\" }, [\n              _vm._v(_vm._s(_vm.form.config.title))\n            ]),\n            _vm.article\n              ? _c(\"div\", { staticClass: \"title_meta\" }, [\n                  _vm._v(\n                    \"\\n        \" +\n                      _vm._s(_vm._f(\"formatDate\")(_vm.article.created_at)) +\n                      \" | \" +\n                      _vm._s(_vm.article.word_count) +\n                      \"\\n      \"\n                  )\n                ])\n              : _vm._e(),\n            !_vm.success\n              ? _c(\"div\", {\n                  staticClass: \"form_text\",\n                  domProps: { innerHTML: _vm._s(_vm.form.config.text) }\n                })\n              : _vm._e()\n          ]),\n          _vm.apikey && _vm.account && _vm.account.username && !_vm.success\n            ? _c(\"div\", { staticClass: \"logged_in\" }, [\n                _c(\"p\", [\n                  _vm._v(\"You're logged in as \"),\n                  _c(\n                    \"a\",\n                    {\n                      attrs: {\n                        href: \"https://edgeryders.eu/u/\" + _vm.account.username,\n                        target: \"_blank\"\n                      }\n                    },\n                    [_vm._v(\"@\" + _vm._s(_vm.account.username))]\n                  )\n                ])\n              ])\n            : _c(\n                \"div\",\n                { staticClass: \"account\", class: { hide: _vm.success } },\n                [\n                  _c(\"h2\", [\n                    _vm._v(_vm._s(_vm.form.config.account.title) + \" \"),\n                    _vm.form.config.account.login\n                      ? _c(\"a\", { attrs: { href: _vm.loginUrl } }, [\n                          _vm._v(_vm._s(_vm.form.config.account.login))\n                        ])\n                      : _c(\"a\", { attrs: { href: _vm.loginUrl } }, [\n                          _vm._v(\"Login to my account\")\n                        ])\n                  ]),\n                  _c(\"p\", {\n                    domProps: {\n                      innerHTML: _vm._s(_vm.form.config.account.text)\n                    }\n                  }),\n                  _c(\"div\", { staticClass: \"account_fields\" }, [\n                    _c(\"div\", { staticClass: \"field\" }, [\n                      _c(\"h3\", [_vm._v(\"Your Email\")]),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.response.account.email,\n                            expression: \"response.account.email\"\n                          }\n                        ],\n                        class: {\n                          valid: _vm.valid.email,\n                          error:\n                            _vm.valid.email == false ||\n                            _vm.valid.errors.includes(\"email\")\n                        },\n                        attrs: { placeholder: \"email\" },\n                        domProps: { value: _vm.response.account.email },\n                        on: {\n                          keydown: function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k($event.keyCode, \"space\", 32, $event.key, [\n                                \" \",\n                                \"Spacebar\"\n                              ])\n                            ) {\n                              return null\n                            }\n                            $event.preventDefault()\n                          },\n                          keyup: function($event) {\n                            return _vm.validateEmail()\n                          },\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.response.account,\n                              \"email\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      })\n                    ]),\n                    _c(\"div\", { staticClass: \"field\" }, [\n                      _c(\"h3\", [_vm._v(\"Desired Username\")]),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.response.account.username,\n                            expression: \"response.account.username\"\n                          }\n                        ],\n                        class: {\n                          valid: _vm.valid.username,\n                          error:\n                            _vm.valid.username == false ||\n                            _vm.valid.errors.includes(\"username\")\n                        },\n                        attrs: { placeholder: \"username\" },\n                        domProps: { value: _vm.response.account.username },\n                        on: {\n                          keydown: function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k($event.keyCode, \"space\", 32, $event.key, [\n                                \" \",\n                                \"Spacebar\"\n                              ])\n                            ) {\n                              return null\n                            }\n                            $event.preventDefault()\n                          },\n                          keyup: function($event) {\n                            return _vm.validateUsername()\n                          },\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.$set(\n                              _vm.response.account,\n                              \"username\",\n                              $event.target.value\n                            )\n                          }\n                        }\n                      })\n                    ])\n                  ])\n                ]\n              ),\n          _c(\n            \"div\",\n            { staticClass: \"fields\", class: { hide: _vm.success } },\n            _vm._l(_vm.form.fields, function(field, index) {\n              return _c(\"div\", { key: index, staticClass: \"field\" }, [\n                field.title\n                  ? _c(\"h3\", [_vm._v(_vm._s(field.title))])\n                  : _vm._e(),\n                field.text &&\n                field.type !== \"checkbox\" &&\n                field.type !== \"consent\"\n                  ? _c(\"p\", [_vm._v(_vm._s(field.text))])\n                  : _vm._e(),\n                field.type == \"input\"\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.response.fields[index][\"answer\"],\n                          expression: \"response.fields[index]['answer']\"\n                        }\n                      ],\n                      staticClass: \"text\",\n                      attrs: { placeholder: _vm.placeholder(field) },\n                      domProps: { value: _vm.response.fields[index][\"answer\"] },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.response.fields[index],\n                            \"answer\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    })\n                  : _vm._e(),\n                field.type == \"textarea\"\n                  ? _c(\"textarea\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.response.fields[index][\"answer\"],\n                          expression: \"response.fields[index]['answer']\"\n                        }\n                      ],\n                      class: { error: _vm.valid.questions.includes(index) },\n                      attrs: { placeholder: _vm.placeholder(field) },\n                      domProps: { value: _vm.response.fields[index][\"answer\"] },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.$set(\n                            _vm.response.fields[index],\n                            \"answer\",\n                            $event.target.value\n                          )\n                        }\n                      }\n                    })\n                  : _vm._e(),\n                field.type == \"select\"\n                  ? _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.response.fields[index][\"answer\"],\n                            expression: \"response.fields[index]['answer']\"\n                          }\n                        ],\n                        staticClass: \"select-css\",\n                        on: {\n                          change: function($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function(o) {\n                                return o.selected\n                              })\n                              .map(function(o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.response.fields[index],\n                              \"answer\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          }\n                        }\n                      },\n                      _vm._l(field.options, function(option, option_index) {\n                        return _c(\n                          \"option\",\n                          { key: option_index, domProps: { value: option } },\n                          [_vm._v(_vm._s(option))]\n                        )\n                      }),\n                      0\n                    )\n                  : _vm._e(),\n                field.type == \"radio\"\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"radio\" },\n                      _vm._l(field.options, function(option, option_index) {\n                        return _c(\n                          \"div\",\n                          { key: option_index, staticClass: \"radio_field\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.response.fields[index][\"answer\"],\n                                  expression: \"response.fields[index]['answer']\"\n                                }\n                              ],\n                              attrs: { type: \"radio\", id: option_index },\n                              domProps: {\n                                value: option,\n                                checked: _vm._q(\n                                  _vm.response.fields[index][\"answer\"],\n                                  option\n                                )\n                              },\n                              on: {\n                                change: function($event) {\n                                  return _vm.$set(\n                                    _vm.response.fields[index],\n                                    \"answer\",\n                                    option\n                                  )\n                                }\n                              }\n                            }),\n                            _c(\"label\", { attrs: { for: option_index } }, [\n                              _vm._v(_vm._s(option))\n                            ])\n                          ]\n                        )\n                      }),\n                      0\n                    )\n                  : _vm._e(),\n                field.type == \"checkbox\"\n                  ? _c(\"div\", { staticClass: \"checkbox_field\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.response.fields[index][\"answer\"],\n                            expression: \"response.fields[index]['answer']\"\n                          }\n                        ],\n                        staticClass: \"inp-cbx\",\n                        staticStyle: { display: \"none\" },\n                        attrs: { id: \"cbx\", type: \"checkbox\" },\n                        domProps: {\n                          checked: Array.isArray(\n                            _vm.response.fields[index][\"answer\"]\n                          )\n                            ? _vm._i(\n                                _vm.response.fields[index][\"answer\"],\n                                null\n                              ) > -1\n                            : _vm.response.fields[index][\"answer\"]\n                        },\n                        on: {\n                          change: function($event) {\n                            var $$a = _vm.response.fields[index][\"answer\"],\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.response.fields[index],\n                                    \"answer\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.response.fields[index],\n                                    \"answer\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.response.fields[index],\n                                \"answer\",\n                                $$c\n                              )\n                            }\n                          }\n                        }\n                      }),\n                      _c(\n                        \"label\",\n                        { staticClass: \"cbx\", attrs: { for: \"cbx\" } },\n                        [\n                          _c(\"span\", [\n                            _c(\n                              \"svg\",\n                              {\n                                attrs: {\n                                  width: \"12px\",\n                                  height: \"9px\",\n                                  viewbox: \"0 0 12 9\"\n                                }\n                              },\n                              [\n                                _c(\"polyline\", {\n                                  attrs: { points: \"1 5 4 8 11 1\" }\n                                })\n                              ]\n                            )\n                          ]),\n                          _c(\"span\", [_vm._v(_vm._s(field.text))])\n                        ]\n                      )\n                    ])\n                  : _vm._e(),\n                field.type == \"consent\"\n                  ? _c(\"div\", { staticClass: \"consent_field\" }, [\n                      _c(\"h3\", [_vm._v(\"Research Consent Agreement\")]),\n                      _c(\"p\", { domProps: { innerHTML: _vm._s(field.text) } }),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.response.fields[index][\"answer\"],\n                            expression: \"response.fields[index]['answer']\"\n                          }\n                        ],\n                        staticClass: \"inp-cbx\",\n                        staticStyle: { display: \"none\" },\n                        attrs: { id: \"cbx\", type: \"checkbox\" },\n                        domProps: {\n                          checked: Array.isArray(\n                            _vm.response.fields[index][\"answer\"]\n                          )\n                            ? _vm._i(\n                                _vm.response.fields[index][\"answer\"],\n                                null\n                              ) > -1\n                            : _vm.response.fields[index][\"answer\"]\n                        },\n                        on: {\n                          change: function($event) {\n                            var $$a = _vm.response.fields[index][\"answer\"],\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = null,\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.response.fields[index],\n                                    \"answer\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.response.fields[index],\n                                    \"answer\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.response.fields[index],\n                                \"answer\",\n                                $$c\n                              )\n                            }\n                          }\n                        }\n                      }),\n                      _c(\n                        \"label\",\n                        { staticClass: \"cbx\", attrs: { for: \"cbx\" } },\n                        [\n                          _c(\"span\", [\n                            _c(\n                              \"svg\",\n                              {\n                                attrs: {\n                                  width: \"12px\",\n                                  height: \"9px\",\n                                  viewbox: \"0 0 12 9\"\n                                }\n                              },\n                              [\n                                _c(\"polyline\", {\n                                  attrs: { points: \"1 5 4 8 11 1\" }\n                                })\n                              ]\n                            )\n                          ]),\n                          _c(\"span\", [_vm._v(_vm._s(field.label))])\n                        ]\n                      )\n                    ])\n                  : _vm._e()\n              ])\n            }),\n            0\n          ),\n          (_vm.valid.errors.length && !_vm.apikey) ||\n          (_vm.valid.questions.length && !_vm.apikey)\n            ? _c(\"div\", { staticClass: \"errors\" }, [\n                _vm.valid.errors.length\n                  ? _c(\n                      \"p\",\n                      [\n                        _vm._v(\"Please enter a valid \\n        \"),\n                        _vm._l(_vm.valid.errors, function(error, index) {\n                          return _c(\"span\", { key: index }, [\n                            _c(\n                              \"span\",\n                              { staticStyle: { \"font-weight\": \"bold\" } },\n                              [_vm._v(_vm._s(error))]\n                            ),\n                            _vm.valid.errors.length > 1 &&\n                            index == _vm.valid.errors.length - 2\n                              ? _c(\"span\", [_vm._v(\" and \")])\n                              : _vm._e(),\n                            _vm.valid.errors.length > 2 &&\n                            index < _vm.valid.errors.length - 2\n                              ? _c(\"span\", [_vm._v(\", \")])\n                              : _vm._e()\n                          ])\n                        })\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm.valid.questions.length\n                  ? _c(\"p\", [\n                      _vm._v(\"Please answer \"),\n                      _c(\n                        \"span\",\n                        { staticStyle: { \"font-weight\": \"bold\" } },\n                        [\n                          _vm._v(\"question\"),\n                          _vm.valid.questions.length > 1\n                            ? _c(\"span\", [_vm._v(\"s\")])\n                            : _vm._e(),\n                          _vm._l(_vm.valid.questions, function(error, index) {\n                            return _c(\"span\", { key: index }, [\n                              index != 0 && index != _vm.valid.questions.length\n                                ? _c(\"span\", [_vm._v(\" & \")])\n                                : _vm._e(),\n                              _vm._v(\" \" + _vm._s(error + 1))\n                            ])\n                          })\n                        ],\n                        2\n                      )\n                    ])\n                  : _vm._e()\n              ])\n            : _vm._e(),\n          _vm.account_errors\n            ? _c(\n                \"div\",\n                { staticClass: \"errors account_error\" },\n                _vm._l(_vm.account_errors, function(error, index) {\n                  return _c(\"p\", { key: index }, [_vm._v(_vm._s(error))])\n                }),\n                0\n              )\n            : _vm._e(),\n          _vm.success\n            ? _c(\"div\", { staticClass: \"confirmation\" }, [\n                _c(\"h2\", [_vm._v(_vm._s(_vm.form.config.confirmation.title))]),\n                !_vm.apikey\n                  ? _c(\"p\", {\n                      domProps: {\n                        innerHTML: _vm._s(_vm.form.config.confirmation.text)\n                      }\n                    })\n                  : _c(\"p\", [\n                      _vm._v(\"Thanks for your submission \"),\n                      _c(\n                        \"a\",\n                        {\n                          attrs: {\n                            href:\n                              \"https://edgeryders.eu/u/\" + _vm.account.username,\n                            target: \"_blank\"\n                          }\n                        },\n                        [_vm._v(\"@\" + _vm._s(_vm.account.username))]\n                      ),\n                      _vm._v(\"! Your answer is \"),\n                      _c(\n                        \"a\",\n                        { attrs: { href: _vm.post_url, target: \"_blank\" } },\n                        [_vm._v(\"here\")]\n                      ),\n                      _vm._v(\n                        \", be sure to check in to see comments from other Edgeryders.\"\n                      )\n                    ])\n              ])\n            : _vm._e(),\n          !_vm.success\n            ? _c(\"button\", { on: { click: _vm.sendForm } }, [\n                _vm._v(_vm._s(_vm.submit))\n              ])\n            : _vm._e()\n        ],\n        1\n      ),\n      _vm.form.config.partners\n        ? _c(\"div\", { staticClass: \"partners\" }, [\n            _vm.form.config.partners.title\n              ? _c(\"h2\", [_vm._v(_vm._s(_vm.form.config.partners.title))])\n              : _c(\"h2\", [_vm._v(\"In partnership with:\")]),\n            _c(\n              \"div\",\n              { staticClass: \"logos\" },\n              _vm._l(_vm.form.config.partners.logos, function(item, index) {\n                return _c(\"div\", { staticClass: \"item\" }, [\n                  _c(\"a\", { attrs: { href: item.url, target: \"_blank\" } }, [\n                    _c(\"img\", { attrs: { src: item.image } })\n                  ])\n                ])\n              }),\n              0\n            )\n          ])\n        : _vm._e(),\n      _c(\"Footer\")\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}